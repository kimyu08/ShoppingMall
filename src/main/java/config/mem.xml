<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mem.xml -->
<!-- 실행할 SQL문을 정의해 놓은 파일(DAO클래스 역할) -->
<!-- 주의사항: 종결문자; 생략해야 함 -->
<mapper namespace="mem">

	<!-- ?기호를 대신하는 문법: 파라미터 바인딩 표기법 #{property} -->
	<!-- 회원 가입 -->
	<insert id="insertRow" parameterType="memDTO">
	<![CDATA[
		INSERT INTO
		tb_member(id, pw, mname, phone, email, zipcode, address1, address2)
		VALUES (#{id}, #{pw}, #{mname}, #{phone}, #{email}, #{zipcode}, #{address1}, #{address2} )
	]]>
	</insert>
	
	<!-- 아이디 중복 조회 -->
	<select id="checkId" parameterType="string" resultType="integer">
		<![CDATA[
		SELECT count(*) 
		FROM tb_member
		WHERE id=#{id}
		]]>
	</select>
	
	<!-- 로그인(아이디, 패스워드가 일치하고, 권한(rights)가져오기 ) -->
	<select id="login" parameterType="memDTO" resultType="String">
		<![CDATA[
		SELECT rights
		FROM tb_member
		WHERE id=#{id} AND pw=#{pw};
		]]>
	</select>
	
	<!-- 회원 탈퇴시 조회 -->
	<select id="dlogin" parameterType="memDTO" resultType="integer">
		<![CDATA[
		SELECT count(*) 
		FROM tb_member
		WHERE id=#{id} AND pw=#{pw};
		]]>
	</select>

	<!-- s_id로 조회해서 정보 가져오기. -->
	<select id="selectMem" parameterType="String" resultMap="rs">
		SELECT * 
		FROM tb_member
		WHERE id=#{s_id}
	</select>
	
	<!-- 모든 회원 정보 가져오기. -->
	<select id="selectAllMem" resultMap="rs">
		SELECT * 
		FROM tb_member
	</select>
	
	<!-- 회원정보(이름,이메일,전화번호) 업데이트. -->
	<select id="updateMem" parameterType="memDTO" resultType="int">
		UPDATE tb_member
		SET mname=#{mname}, email=#{email}, phone=#{phone}
		WHERE id=#{id}
	</select>
	
	<!-- 회원정보(우편번호,상세주소) 업데이트. -->
	<select id="updateLoc" parameterType="memDTO" resultType="int">
		UPDATE tb_member
		SET zipcode=#{zipcode}, address1=#{address1}, address2=#{address2}
		WHERE id=#{id}
	</select>
	
	<!-- 회원 탈퇴(개인정보 공란 만들고 rights=3(탈퇴계정),삭제가 불가능 foreign키라 -->
	<select id="outMem" parameterType="memDTO" resultType="int">
		UPDATE tb_member
		SET mname="", email="", phone="", zipcode="", address1="", address2="", rights=3
		WHERE id=#{id};
	</select>

	<!-- 회원 삭제 -->
	<delete id="deleteMem" parameterType="String" >
		DELETE FROM tb_member
		WHERE id=#{id};
	</delete>

	<!-- DB에서 가져온 행 값을 객체에 매핑하는 방법을 정의 ResultSet에서 가져와서 DTO에 담고 ArrayList에 추가하는 
		기능 -->
	<resultMap type="memDTO" id="rs">
		<result column="id" property="id" />
		<result column="pw" property="pw" />
		<result column="mname" property="mname" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="zipcode" property="zipcode" />
		<result column="address1" property="address1" />
		<result column="address2" property="address2" />
		<result column="rights" property="rights" />
		<result column="date" property="date" />
		<result column="age" property="age" />
	</resultMap>

	<update id="updateRow" parameterType="memDTO"> <!-- jdbc.xml에 typeAliases에 memDTO를 등록해놔서 바로 쓸 수 있다. -->
		UPDATE mem
		SET name=#{name}, age=#{age}
		WHERE num=#{num}
	</update>

	<!-- int a라는 매개변수 a 선언과 같은 기능 -->
	<!-- SQL문에서 특수문자 < > /등을 사용해야 하는 경우 <![CDATA[sql문]]> 이렇게 쓰면 된다. -->
	<delete id="deleteRow" parameterType="int">
		<![CDATA[
		DELETE FROM mem
		WHERE age > #{a}
		]]>
	</delete>

	<select id="search" parameterType="String" resultMap="rs">
		<![CDATA[
		SELECT num, name, age 
		FROM mem
		WHERE name LIKE '%'||#{keyword}||'%'
		ORDER BY num DESC
		]]>
	</select>

	<select id="rowCount" resultType="int">
		<![CDATA[
		SELECT count(*) 
		FROM mem
		]]>
	</select>
	
	<select id="selectSee" parameterType="int" resultMap="rs">
		<![CDATA[
		SELECT num, name, age
		FROM mem
		WHERE num = #{num}
		ORDER BY num DESC
		]]>
	</select>
	
	<select id="selectID" parameterType="memDTO" resultType="String">
		<![CDATA[
		SELECT id 
		from tb_member 
		where mname = #{mname} AND  phone = #{phone}
		]]>
	</select>
	
	<select id="selectPW" parameterType="memDTO" resultType="String">
		<![CDATA[
		SELECT pw
		FROM tb_member
		WHERE id = #{id} AND mname = #{mname} and phone = #{phone} 
		]]>
	</select>
	
</mapper>